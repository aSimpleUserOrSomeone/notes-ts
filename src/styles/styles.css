:root {
	--green1: #dbf0e1;
	--green2: #e2f8d5;
	--green3: #bad9ba;
	--cyan1: #b6f0e7;
	--cyan2: #b9d8cb;
}

* {
	font-family: 'Roboto', sans-serif;
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	width: 100vw;
	height: 100vh;

	display: flex;
	flex-direction: column;
	justify-content: start;
	align-items: center;
}

button {
	background-color: var(--cyan1);
	border-radius: 0.55rem;
	border: none;
	transition: box-shadow 0.15s, background-color 0.15s, text-shadow 0.15s, color 0.15s;
}

.enter-form {
	position: fixed;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -60%);
	width: auto;
	height: 40vh;

	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: 1fr 1fr 1fr;
}

form > h1 {
	text-align: center;
	text-shadow: 0 0 3px black, 0 0 16px var(--green2);
	color: var(--cyan1);
	font-size: 4em;

	align-self: center;
}
form > h1:hover {
	cursor: default;
}
.enter-form > .container {
	align-self: center;
	justify-self: center;

	align-items: baseline;
	display: flex;
	gap: 1.5em;
}
.enter-form label {
	font-size: 1.25em;
}
.enter-form input[type='text'] {
	font-size: 1.25em;
	line-height: 1em;
	padding: 0.2em;
}
.enter-form > button {
	font-size: 1.5em;
	font-weight: bold;
	padding: 0.75em;
	box-shadow: 0 0 0.5rem 0rem hsl(0, 0%, 30%);

	align-self: center;
	justify-self: center;
}
.enter-form > button:hover {
	background-color: white;
	box-shadow: 0 0 0.5rem 0rem white;
	color: white;
	text-shadow: 0 0 0.2em black;
	cursor: pointer;
}

body > header {
	width: 100vw;
	height: min-content;
	min-height: 35px;
	padding: 0.35rem;
	background-color: var(--green1);
	box-shadow: 0 0 1.25rem 0.5rem var(--cyan2);

	display: flex;
	justify-content: space-between;
	align-items: center;
}

.new-note-btn {
	background-image: url(../res/new-document.png);
	background-size: cover;
	width: 2rem;
	height: 2rem;
	box-shadow: 0 0 0.5rem 0rem hsl(0, 0%, 30%);
}
.new-note-btn:hover {
	background-color: white;
	box-shadow: 0 0 0.5rem 0rem white;
	cursor: pointer;
}
.new-note-btn:active {
	background-color: var(--cyan2);
	box-shadow: 0 0 0.5rem 0rem hsl(0, 0%, 5%);
}

.back-btn {
	font-weight: 600;
	width: auto;
	height: 2rem;
	padding-right: 1em;
	padding-left: 1em;
	box-shadow: 0 0 0.5rem 0rem hsl(0, 0%, 30%);
}
.back-btn:hover {
	background-color: white;
	box-shadow: 0 0 0.5rem 0rem white;
	cursor: pointer;
}
.back-btn:active {
	background-color: var(--cyan2);
	box-shadow: 0 0 0.5rem 0rem hsl(0, 0%, 5%);
}

.counters-div {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: flex-start;
}

/* .counter-all-p {
}

.counter-now-p {
} */

main {
	flex-grow: 1;
	width: 100vw;
	min-height: 360px;
	overflow: hidden;
	padding: 0.5rem;
	position: relative;
}

.note {
	min-width: 9rem;
	min-height: 7rem;
	padding: 0.45rem;
	position: absolute;
	top: 10px;
	left: 10px;
	border: 1px solid hsl(0, 0%, 80%);
	background-color: white;

	resize: both;
	overflow: auto;

	display: grid;

	grid-template-rows: auto 1fr;
	grid-template-columns: 1.5rem 1fr 1.5rem;

	row-gap: 0.75rem;

	transition: background-color 0.25s, box-shadow 0.25s;
}

.note.active {
	background-color: hsl(172, 100%, 95%);
	box-shadow: 0 4px 6px 0 var(--cyan2);
}

.note button {
	border: none;
	border-radius: 0.25rem;
	background-color: transparent;
	background-size: cover;
	width: 100%;
	aspect-ratio: 1;
	position: static;
}
button:hover {
	cursor: pointer;
}

.edit-btn {
	background-image: url(../res/edit.png);
	grid-row-start: 1;
	grid-column-start: 1;

	grid-row-end: 2;
	grid-column-end: 2;
}

.edit-btn {
	background-color: hsl(182, 100%, 90%);
}

.close-btn {
	background-image: url(../res/close.png);

	grid-row-start: 1;
	grid-column-start: 3;

	grid-row-end: 2;
	grid-column-end: 4;

	transition: background-color 0.25s;
}

.close-btn:hover {
	background-color: hsl(2, 100%, 90%);
}

.textfield-p {
	min-height: 2rem;
	height: 100%;
	width: 100%;

	grid-row-start: 2;
	grid-column-start: 1;

	grid-row-end: 3;
	grid-column-end: 4;

	overflow: auto;

	resize: none;
	border: none;
}

.tox-tinymce {
	z-index: 1200;
	position: fixed;
	width: calc(100vw - 160px);
	height: 80vh;
	min-width: 240px;
	min-height: 160px;
	top: 10%;
	left: 50%;
	transform: translateX(-50%);
}

#overlay {
	position: fixed;
	width: 100vw;
	height: 100vh;
	top: 0%;
	left: 0%;
	z-index: 1000;
}
.overlay-shown {
	display: block;
	pointer-events: initial;
	background-color: rgb(0, 0, 0, 0.2);
}
.overlay-hidden {
	display: none;
	pointer-events: none;
	background-color: transparent;
}
